{
  "swagger" : "2.0",
  "info" : {
    "description" : "Unofficial RepositPower External API\n\nThis API is built by hand from the description at https://api.repositpower.com/docs/\n\nIt should not be mistaken for official in any way shape or form, it's simply my\nattempt to document the API and build some client libraries from that.\n\nThis API is demonstrably wrong around authentication - please read the official docco\nat the link above for accurate details. It will login, but all the login options are not\ncaptured - I wasn't clear how to write up both basic and token login being available\non all URLs (ie. how to make auth an either/or rather than a both).\n\nThis API is also not completed yet. I've not tested a bunch of 200 responses, and some\nthat I have don't have accurate enums in them because I don't know all the possible values.\n\nAlso, I haven't quite figured out how to wrap the whole thing in unit tests.\n\nPublishes a swagger file to https://github.com/silarsis/repositpowerswagger\nand a python client library to https://github.com/silarsis/rp-python-client\n\nThis version (1.0.0) matches version 11/03/2016 of the official docs (as at 30/5/2017)\n",
    "version" : "1.0.0",
    "title" : "RepositPower External",
    "contact" : {
      "email" : "kevin@littlejohn.id.au"
    },
    "license" : {
      "name" : "Apache 2.0",
      "url" : "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "host" : "api.repositpower.com",
  "basePath" : "/v2",
  "tags" : [ {
    "name" : "authed",
    "description" : "Only allowed after authentication"
  }, {
    "name" : "login",
    "description" : "Unauthenticated"
  } ],
  "schemes" : [ "https" ],
  "paths" : {
    "/auth/login" : {
      "post" : {
        "summary" : "return access token (session id) upon successful basic or html auth\n(use username/password, or use basic auth)\n",
        "description" : "Post username and password and you will get back an RP-TOKEN value.\nAdd that value to the Headers of all subsequent calls (see api_key security definition above)\nas your authenticated token.\n",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "Repsit-Auth",
          "in" : "header",
          "required" : true,
          "type" : "string",
          "default" : "API"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/authParams"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "authenticated",
            "schema" : {
              "$ref" : "#/definitions/inline_response_200"
            }
          },
          "401" : {
            "description" : "Unauthorised - incorrect or missing user/pass"
          }
        }
      }
    },
    "/auth/logout" : {
      "get" : {
        "summary" : "de-authenticate the token (always returns success)",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "de-authenticated",
            "schema" : {
              "$ref" : "#/definitions/inline_response_200_1"
            }
          }
        },
        "security" : [ {
          "api_key" : [ ]
        } ]
      }
    },
    "/userkeys/" : {
      "get" : {
        "summary" : "all userkeys/battery system identifiers for the current user",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "List of deployment keys",
            "schema" : {
              "$ref" : "#/definitions/inline_response_200_2"
            }
          },
          "401" : {
            "description" : "Unauthorised - incorrect or missing user/pass"
          }
        },
        "security" : [ {
          "api_key" : [ ]
        } ]
      }
    },
    "/deployments/{userkey}/components" : {
      "get" : {
        "summary" : "installed components and their overall status",
        "parameters" : [ {
          "name" : "userkey",
          "in" : "path",
          "description" : "User Key from /userkeys",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "installed components and their overall status",
            "schema" : {
              "$ref" : "#/definitions/inline_response_200_3"
            }
          },
          "401" : {
            "description" : "Unauthorised - incorrect or missing user/pass"
          }
        },
        "security" : [ {
          "api_key" : [ ]
        } ]
      }
    },
    "/deployments/{userkey}/battery/capacity" : {
      "get" : {
        "summary" : "battery capacity in kWh",
        "parameters" : [ {
          "name" : "userkey",
          "in" : "path",
          "description" : "User Key from /userkeys",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "battery capacity in kWh",
            "schema" : {
              "$ref" : "#/definitions/inline_response_200_4"
            }
          },
          "401" : {
            "description" : "Unauthorised - incorrect or missing user/pass"
          }
        },
        "security" : [ {
          "api_key" : [ ]
        } ]
      }
    },
    "/deployments/{userkey}/generation/historical/p" : {
      "get" : {
        "summary" : "solar generation data as negative real_power in kW",
        "parameters" : [ {
          "name" : "userkey",
          "in" : "path",
          "description" : "User Key from /userkeys",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "delta_t",
          "in" : "query",
          "description" : "downsample interval",
          "required" : false,
          "type" : "integer",
          "minimum" : 150
        }, {
          "name" : "start",
          "in" : "query",
          "description" : "Start time",
          "required" : false,
          "type" : "integer",
          "format" : "epoch"
        }, {
          "name" : "end",
          "in" : "query",
          "description" : "End time",
          "required" : false,
          "type" : "integer",
          "format" : "epoch"
        }, {
          "name" : "format",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "enum" : [ "json", "csv" ]
        } ],
        "responses" : {
          "200" : {
            "description" : "list of solar generation readings - timestamp, kW",
            "schema" : {
              "$ref" : "#/definitions/inline_response_200_5"
            }
          },
          "401" : {
            "description" : "Unauthorised - incorrect or missing user/pass"
          }
        },
        "security" : [ {
          "api_key" : [ ]
        } ]
      }
    },
    "/deployments/{userkey}/inverter/historical/p" : {
      "get" : {
        "summary" : "the battery inverter data as real_power in kW",
        "parameters" : [ {
          "name" : "userkey",
          "in" : "path",
          "description" : "User Key from /userkeys",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "delta_t",
          "in" : "query",
          "description" : "downsample interval",
          "required" : false,
          "type" : "integer",
          "minimum" : 150
        }, {
          "name" : "start",
          "in" : "query",
          "description" : "Start time",
          "required" : false,
          "type" : "integer",
          "format" : "epoch"
        }, {
          "name" : "end",
          "in" : "query",
          "description" : "End time",
          "required" : false,
          "type" : "integer",
          "format" : "epoch"
        }, {
          "name" : "format",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "enum" : [ "json", "csv" ]
        } ],
        "responses" : {
          "200" : {
            "description" : "list of inverter readings - timestamp, kW",
            "schema" : {
              "$ref" : "#/definitions/inline_response_200_6"
            }
          },
          "401" : {
            "description" : "Unauthorised - incorrect or missing user/pass"
          }
        },
        "security" : [ {
          "api_key" : [ ]
        } ]
      }
    },
    "/deployments/{userkey}/house/historical" : {
      "get" : {
        "summary" : "house consumption in kW",
        "parameters" : [ {
          "name" : "userkey",
          "in" : "path",
          "description" : "User Key from /userkeys",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "delta_t",
          "in" : "query",
          "description" : "downsample interval",
          "required" : false,
          "type" : "integer",
          "minimum" : 150
        }, {
          "name" : "start",
          "in" : "query",
          "description" : "Start time",
          "required" : false,
          "type" : "integer",
          "format" : "epoch"
        }, {
          "name" : "end",
          "in" : "query",
          "description" : "End time",
          "required" : false,
          "type" : "integer",
          "format" : "epoch"
        }, {
          "name" : "format",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "enum" : [ "json", "csv" ]
        } ],
        "responses" : {
          "200" : {
            "description" : "installed components, plus house measurements - timestamp, kW",
            "schema" : {
              "$ref" : "#/definitions/inline_response_200_7"
            }
          },
          "401" : {
            "description" : "Unauthorised - incorrect or missing user/pass"
          }
        },
        "security" : [ {
          "api_key" : [ ]
        } ]
      }
    },
    "/deployments/{userkey}/battery/historical/soc" : {
      "get" : {
        "summary" : "state of charge of a battery in kWh",
        "parameters" : [ {
          "name" : "userkey",
          "in" : "path",
          "description" : "User Key from /userkeys",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "delta_t",
          "in" : "query",
          "description" : "downsample interval",
          "required" : false,
          "type" : "integer",
          "minimum" : 150
        }, {
          "name" : "start",
          "in" : "query",
          "description" : "Start time",
          "required" : false,
          "type" : "integer",
          "format" : "epoch"
        }, {
          "name" : "end",
          "in" : "query",
          "description" : "End time",
          "required" : false,
          "type" : "integer",
          "format" : "epoch"
        }, {
          "name" : "format",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "enum" : [ "json", "csv" ]
        } ],
        "responses" : {
          "200" : {
            "description" : "capacity and list of state of charge records - timestamp, kWh",
            "schema" : {
              "$ref" : "#/definitions/inline_response_200_8"
            }
          },
          "401" : {
            "description" : "Unauthorised - incorrect or missing user/pass"
          }
        },
        "security" : [ {
          "api_key" : [ ]
        } ]
      }
    },
    "/deployments/{userkey}/meter/historical/p" : {
      "get" : {
        "summary" : "real power measurements in kW at the grid connection",
        "parameters" : [ {
          "name" : "userkey",
          "in" : "path",
          "description" : "User Key from /userkeys",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "delta_t",
          "in" : "query",
          "description" : "downsample interval",
          "required" : false,
          "type" : "integer",
          "minimum" : 150
        }, {
          "name" : "start",
          "in" : "query",
          "description" : "Start time",
          "required" : false,
          "type" : "integer",
          "format" : "epoch"
        }, {
          "name" : "end",
          "in" : "query",
          "description" : "End time",
          "required" : false,
          "type" : "integer",
          "format" : "epoch"
        }, {
          "name" : "format",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "enum" : [ "json", "csv" ]
        } ],
        "responses" : {
          "200" : {
            "description" : "list of meter usage readings - timestamp, kW",
            "schema" : {
              "$ref" : "#/definitions/inline_response_200_9"
            }
          },
          "401" : {
            "description" : "Unauthorised - incorrect or missing user/pass"
          }
        },
        "security" : [ {
          "api_key" : [ ]
        } ]
      }
    },
    "/deployments/{userkey}/cost/historical" : {
      "get" : {
        "summary" : "energy cost in $",
        "parameters" : [ {
          "name" : "userkey",
          "in" : "path",
          "description" : "User Key from /userkeys",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "delta_t",
          "in" : "query",
          "description" : "downsample interval",
          "required" : false,
          "type" : "integer",
          "minimum" : 150
        }, {
          "name" : "start",
          "in" : "query",
          "description" : "Start time",
          "required" : false,
          "type" : "integer",
          "format" : "epoch"
        }, {
          "name" : "end",
          "in" : "query",
          "description" : "End time",
          "required" : false,
          "type" : "integer",
          "format" : "epoch"
        }, {
          "name" : "format",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "enum" : [ "json", "csv" ]
        } ],
        "responses" : {
          "200" : {
            "description" : "list of retail costings for usage - timestamp, cost in $",
            "schema" : {
              "$ref" : "#/definitions/inline_response_200_10"
            }
          },
          "401" : {
            "description" : "Unauthorised - incorrect or missing user/pass"
          }
        },
        "security" : [ {
          "api_key" : [ ]
        } ]
      }
    },
    "/deployments/{userkey}/gridcredits/historical" : {
      "get" : {
        "summary" : "earned gridcredits",
        "parameters" : [ {
          "name" : "userkey",
          "in" : "path",
          "description" : "User Key from /userkeys",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "delta_t",
          "in" : "query",
          "description" : "downsample interval",
          "required" : false,
          "type" : "integer",
          "minimum" : 150
        }, {
          "name" : "start",
          "in" : "query",
          "description" : "Start time",
          "required" : false,
          "type" : "integer",
          "format" : "epoch"
        }, {
          "name" : "end",
          "in" : "query",
          "description" : "End time",
          "required" : false,
          "type" : "integer",
          "format" : "epoch"
        }, {
          "name" : "format",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "enum" : [ "json", "csv" ]
        } ],
        "responses" : {
          "200" : {
            "description" : "list of grid credits earnt - timestamp, gridcredits",
            "schema" : {
              "$ref" : "#/definitions/inline_response_200_11"
            }
          },
          "401" : {
            "description" : "Unauthorised - incorrect or missing user/pass"
          }
        },
        "security" : [ {
          "api_key" : [ ]
        } ]
      }
    }
  },
  "securityDefinitions" : {
    "api_key" : {
      "type" : "apiKey",
      "name" : "Authorization",
      "in" : "header"
    },
    "basic" : {
      "type" : "basic"
    }
  },
  "definitions" : {
    "authParams" : {
      "required" : [ "password", "username" ],
      "properties" : {
        "username" : {
          "type" : "string",
          "description" : "Username for access"
        },
        "password" : {
          "type" : "string",
          "description" : "Password for access"
        }
      },
      "description" : "Username/password for POST operation"
    },
    "timestampMeter" : {
      "type" : "array",
      "description" : "Commonly used structure holding an array of arrays of [timestamp, meter_value]",
      "items" : {
        "type" : "array",
        "items" : {
          "type" : "number"
        },
        "maxItems" : 2,
        "minItems" : 2
      }
    },
    "houseData" : {
      "properties" : {
        "ac_dc" : {
          "type" : "boolean"
        },
        "battery" : {
          "type" : "boolean"
        },
        "dc_coupled" : {
          "type" : "boolean"
        },
        "frequency_trigger" : {
          "type" : "boolean"
        },
        "inverter" : {
          "type" : "boolean"
        },
        "load_meter" : {
          "type" : "boolean"
        },
        "load_phases" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "solar_meter" : {
          "type" : "boolean"
        },
        "solar_phases" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "solar_streams_ac" : {
          "type" : "object",
          "properties" : { }
        },
        "solar_streams_dc" : {
          "type" : "object",
          "properties" : { }
        }
      },
      "description" : "Data about a house/deployment"
    },
    "inline_response_200" : {
      "properties" : {
        "access_token" : {
          "type" : "string"
        },
        "expires_at" : {
          "type" : "string"
        }
      },
      "example" : "{\"access_token\":\"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwczovL3JlcG9zaXQuYXUuYXV0aDAuY29tLyIsInN1YiI6ImF1dGgwfFIzcDBzMVRQMHczUiIsImF1ZCI6Imh0dHBzOi8vYXBpLnJlcG9zaXRwb3dlci5jb20vIiwiYXpwIjoiM0NGNTM0cVBkZ2dxdUxsb0dwN3ViUGVGZVEyWVBBNU8iLCJleHAiOjE0OTk4MzYyMDUsImlhdCI6MTQ5OTgzMTQyOCwic2NvcGUiOiJyZXBvc2l0IG9mZmxpbmVfYWNjZXNzIiwiZ3R5IjoicGFzc3dvcmQiLCJqdGkiOiI2NDdlYWFjMC1lNzM2LTRmYzgtYjA0OS02NjEwZmYzZmNmZTUifQ.Y7kVpcFhhlM8_jEqSbkzfKmI6IfSVh0LhXoQKzBwkq0\",\"expires_at\":1499832028}"
    },
    "inline_response_200_1" : {
      "properties" : {
        "msg" : {
          "type" : "string"
        },
        "status" : {
          "type" : "string"
        }
      },
      "example" : "{\"msg\":\"logged out\",\"status\":\"ok\"}"
    },
    "inline_response_200_2" : {
      "properties" : {
        "userKeys" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        }
      },
      "description" : "Response for userkeys request",
      "example" : "{\"userKeys\":[\"UDFG23G5\"]}"
    },
    "inline_response_200_3" : {
      "properties" : {
        "data" : {
          "$ref" : "#/definitions/houseData"
        },
        "status" : {
          "type" : "string"
        }
      }
    },
    "inline_response_200_4" : {
      "properties" : {
        "batteryCapacity" : {
          "type" : "number"
        }
      },
      "example" : "{\"batteryCapacity\":9.8}"
    },
    "inline_response_200_5" : {
      "properties" : {
        "solarP" : {
          "$ref" : "#/definitions/timestampMeter"
        }
      }
    },
    "inline_response_200_6" : {
      "properties" : {
        "inverterP" : {
          "$ref" : "#/definitions/timestampMeter"
        }
      }
    },
    "inline_response_200_7" : {
      "properties" : {
        "data" : {
          "$ref" : "#/definitions/houseData"
        },
        "houseP" : {
          "$ref" : "#/definitions/timestampMeter"
        }
      }
    },
    "inline_response_200_8" : {
      "properties" : {
        "batteryCapacity" : {
          "type" : "number"
        },
        "batterySOC" : {
          "$ref" : "#/definitions/timestampMeter"
        }
      }
    },
    "inline_response_200_9" : {
      "properties" : {
        "meterP" : {
          "$ref" : "#/definitions/timestampMeter"
        }
      }
    },
    "inline_response_200_10" : {
      "properties" : {
        "retailCost" : {
          "$ref" : "#/definitions/timestampMeter"
        }
      }
    },
    "inline_response_200_11" : {
      "properties" : {
        "gridcredits" : {
          "$ref" : "#/definitions/timestampMeter"
        }
      }
    }
  },
  "parameters" : {
    "userkey" : {
      "name" : "userkey",
      "in" : "path",
      "description" : "User Key from /userkeys",
      "required" : true,
      "type" : "string"
    },
    "delta_t" : {
      "name" : "delta_t",
      "in" : "query",
      "description" : "downsample interval",
      "required" : false,
      "type" : "integer",
      "minimum" : 150
    },
    "start" : {
      "name" : "start",
      "in" : "query",
      "description" : "Start time",
      "required" : false,
      "type" : "integer",
      "format" : "epoch"
    },
    "end" : {
      "name" : "end",
      "in" : "query",
      "description" : "End time",
      "required" : false,
      "type" : "integer",
      "format" : "epoch"
    },
    "format" : {
      "name" : "format",
      "in" : "query",
      "required" : false,
      "type" : "string",
      "enum" : [ "json", "csv" ]
    },
    "JWTRequestHeader" : {
      "name" : "Repsit-Auth",
      "in" : "header",
      "required" : true,
      "type" : "string",
      "default" : "API"
    }
  }
}