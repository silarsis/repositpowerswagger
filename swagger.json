{
  "swagger" : "2.0",
  "info" : {
    "description" : "Unofficial RepositPower External API\nThis API is built by hand from the description at https://api.repositpower.com/docs/\nIt should not be mistaken for official in any way shape or form, it's simply my\nattempt to document the API and build some client libraries from that.\n\nThis API is demonstrably wrong around authentication - please read the official docco\nat the link above for accurate details. It will login, but all the login options are not\ncaptured - I wasn't clear how to write up both basic and token login being available\non all URLs (ie. how to make auth an either/or rather than a both).\n\nThis API is also not completed yet. I've note tested a bunch of 200 responses, and some\nthat I have don't have accurate enums in them because I don't know all the possible values.\n",
    "version" : "1.0.0",
    "title" : "RepositPower External",
    "contact" : {
      "email" : "kevin@littlejohn.id.au"
    },
    "license" : {
      "name" : "Apache 2.0",
      "url" : "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "host" : "api.repositpower.com",
  "basePath" : "/v2",
  "tags" : [ {
    "name" : "authed",
    "description" : "Only allowed after authentication"
  }, {
    "name" : "login",
    "description" : "Unauthenticated"
  } ],
  "schemes" : [ "https" ],
  "securityDefinitions" : {
    "api_key" : {
      "type" : "apiKey",
      "name" : "Authorization",
      "in" : "header"
    },
    "basic" : {
      "type" : "basic"
    }
  },
  "parameters" : {
    "userkey" : {
      "in" : "path",
      "name" : "userkey",
      "description" : "User Key from /userkeys",
      "required" : true,
      "type" : "string"
    },
    "delta_t" : {
      "name" : "delta_t",
      "in" : "query",
      "type" : "integer",
      "minimum" : 150,
      "description" : "downsample interval"
    },
    "start" : {
      "name" : "start",
      "in" : "query",
      "type" : "integer",
      "format" : "epoch",
      "description" : "Start time"
    },
    "end" : {
      "name" : "end",
      "in" : "query",
      "type" : "integer",
      "format" : "epoch",
      "description" : "End time"
    },
    "format" : {
      "name" : "format",
      "in" : "query",
      "type" : "string",
      "description" : "json or csv"
    }
  },
  "definitions" : {
    "authParams" : {
      "description" : "Username/password for POST operation",
      "properties" : {
        "username" : {
          "type" : "string",
          "description" : "Username for access"
        },
        "password" : {
          "type" : "string",
          "description" : "Password for access"
        }
      },
      "required" : [ "username", "password" ]
    },
    "timestampMeter" : {
      "description" : "Commonly used structure holding an array of arrays of [timestamp, meter_value]",
      "type" : "array",
      "items" : {
        "type" : "array",
        "items" : {
          "type" : "number",
          "minItems" : 2,
          "maxItems" : 2
        }
      }
    }
  },
  "paths" : {
    "/auth/login" : {
      "post" : {
        "summary" : "return access token (session id) upon successful basic or html auth\n(use username/password, or use basic auth)\n",
        "description" : "Post username and password and you will get back an RP-TOKEN value.\nAdd that value to the Headers of all subsequent calls (see api_key security definition above)\nas your authenticated token.\n",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "schema" : {
            "$ref" : "#/definitions/authParams"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "authenticated",
            "schema" : {
              "type" : "object",
              "properties" : {
                "RP-TOKEN" : {
                  "type" : "string"
                }
              },
              "example" : {
                "RP-TOKEN" : 123456790
              }
            }
          },
          "401" : {
            "description" : "Unauthorised - incorrect or missing user/pass"
          }
        }
      },
      "get" : {
        "security" : [ {
          "basic" : [ ]
        } ],
        "summary" : "return access token upon successful basic auth",
        "description" : "Send username and password as basic auth and you will get back an RP-TOKEN value.\nAdd that value to the Headers of all subsequent calls (see api_key security definition above)\nas your authenticated token.\n",
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "authenticated",
            "schema" : {
              "type" : "object",
              "properties" : {
                "RP-TOKEN" : {
                  "type" : "string"
                }
              },
              "example" : {
                "RP-TOKEN" : 123456790
              }
            }
          },
          "401" : {
            "description" : "Unauthorised - incorrect or missing user/pass"
          }
        }
      }
    },
    "/auth/logout" : {
      "get" : {
        "security" : [ {
          "api_key" : [ ]
        } ],
        "summary" : "de-authenticate the token (always returns success)",
        "responses" : {
          "200" : {
            "description" : "de-authenticated",
            "schema" : {
              "type" : "object",
              "properties" : {
                "msg" : {
                  "type" : "string"
                },
                "status" : {
                  "type" : "string"
                }
              },
              "example" : {
                "msg" : "logged out",
                "status" : "ok"
              }
            }
          }
        }
      }
    },
    "/userkeys/" : {
      "get" : {
        "security" : [ {
          "api_key" : [ ]
        } ],
        "summary" : "all userkeys/battery system identifiers for the current user",
        "responses" : {
          "200" : {
            "description" : "List of deployment keys",
            "schema" : {
              "description" : "Response for userkeys request",
              "properties" : {
                "userKeys" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              },
              "example" : {
                "userKeys" : [ "UDFG23G5" ]
              }
            }
          },
          "401" : {
            "description" : "Unauthorised - incorrect or missing user/pass"
          }
        }
      }
    },
    "/deployments/{userkey}/components" : {
      "get" : {
        "security" : [ {
          "api_key" : [ ]
        } ],
        "summary" : "installed components and their overall status",
        "parameters" : [ {
          "$ref" : "#/parameters/userkey"
        } ],
        "responses" : {
          "200" : {
            "description" : "installed components and their overall status",
            "schema" : {
              "properties" : {
                "data" : {
                  "type" : "object",
                  "properties" : {
                    "ac_dc" : {
                      "type" : "boolean"
                    },
                    "battery" : {
                      "type" : "boolean"
                    },
                    "dc_coupled" : {
                      "type" : "boolean"
                    },
                    "frequency_trigger" : {
                      "type" : "boolean"
                    },
                    "inverter" : {
                      "type" : "boolean"
                    },
                    "load_meter" : {
                      "type" : "boolean"
                    },
                    "load_phases" : {
                      "type" : "array",
                      "items" : {
                        "type" : "string"
                      }
                    },
                    "solar_meter" : {
                      "type" : "boolean"
                    },
                    "solar_phases" : {
                      "type" : "array",
                      "items" : {
                        "type" : "string"
                      }
                    },
                    "solar_streams_ac" : {
                      "type" : "object"
                    },
                    "solar_streams_dc" : {
                      "type" : "object"
                    }
                  }
                },
                "status" : {
                  "type" : "string"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorised - incorrect or missing user/pass"
          }
        }
      }
    },
    "/deployments/{userkey}/battery/capacity" : {
      "get" : {
        "security" : [ {
          "api_key" : [ ]
        } ],
        "summary" : "battery capacity in kWh",
        "parameters" : [ {
          "$ref" : "#/parameters/userkey"
        } ],
        "responses" : {
          "200" : {
            "description" : "battery capacity in kWh",
            "schema" : {
              "properties" : {
                "batteryCapacity" : {
                  "type" : "number"
                }
              },
              "example" : {
                "batteryCapacity" : 9.8
              }
            }
          },
          "401" : {
            "description" : "Unauthorised - incorrect or missing user/pass"
          }
        }
      }
    },
    "/deployments/{userkey}/generation/historical/p" : {
      "get" : {
        "security" : [ {
          "api_key" : [ ]
        } ],
        "summary" : "solar generation data as negative real_power in kW",
        "parameters" : [ {
          "$ref" : "#/parameters/userkey"
        }, {
          "$ref" : "#/parameters/delta_t"
        }, {
          "$ref" : "#/parameters/start"
        }, {
          "$ref" : "#/parameters/end"
        }, {
          "$ref" : "#/parameters/format"
        } ],
        "responses" : {
          "200" : {
            "description" : "list of solar generation readings - timestamp, usage",
            "schema" : {
              "properties" : {
                "solarP" : {
                  "type" : "array",
                  "items" : {
                    "type" : "array",
                    "items" : {
                      "type" : "number"
                    }
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorised - incorrect or missing user/pass"
          }
        }
      }
    },
    "/deployments/{userkey}/inverter/historical/p" : {
      "get" : {
        "security" : [ {
          "api_key" : [ ]
        } ],
        "summary" : "the battery inverter data as real_power in kW",
        "parameters" : [ {
          "$ref" : "#/parameters/userkey"
        }, {
          "$ref" : "#/parameters/delta_t"
        }, {
          "$ref" : "#/parameters/start"
        }, {
          "$ref" : "#/parameters/end"
        }, {
          "$ref" : "#/parameters/format"
        } ],
        "responses" : {
          "200" : {
            "description" : "list of inverter readings - timestamp, usage",
            "schema" : {
              "properties" : {
                "inverterP" : {
                  "$ref" : "#/definitions/timestampMeter"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorised - incorrect or missing user/pass"
          }
        }
      }
    },
    "/deployments/{userkey}/house/historical" : {
      "get" : {
        "security" : [ {
          "api_key" : [ ]
        } ],
        "summary" : "house consumption in kW",
        "parameters" : [ {
          "$ref" : "#/parameters/userkey"
        }, {
          "$ref" : "#/parameters/delta_t"
        }, {
          "$ref" : "#/parameters/start"
        }, {
          "$ref" : "#/parameters/end"
        }, {
          "$ref" : "#/parameters/format"
        } ],
        "responses" : {
          "200" : {
            "description" : "installed components, plus house measurements - timestamp, usage",
            "schema" : {
              "properties" : {
                "data" : {
                  "type" : "object",
                  "properties" : {
                    "ac_dc" : {
                      "type" : "boolean"
                    },
                    "battery" : {
                      "type" : "boolean"
                    },
                    "dc_coupled" : {
                      "type" : "boolean"
                    },
                    "frequency_trigger" : {
                      "type" : "boolean"
                    },
                    "inverter" : {
                      "type" : "boolean"
                    },
                    "load_meter" : {
                      "type" : "boolean"
                    },
                    "load_phases" : {
                      "type" : "array",
                      "items" : {
                        "type" : "string"
                      }
                    },
                    "solar_meter" : {
                      "type" : "boolean"
                    },
                    "solar_phases" : {
                      "type" : "array",
                      "items" : {
                        "type" : "string"
                      }
                    },
                    "solar_streams_ac" : {
                      "type" : "object"
                    },
                    "solar_streams_dc" : {
                      "type" : "object"
                    }
                  }
                },
                "houseP" : {
                  "type" : "array",
                  "items" : {
                    "type" : "array",
                    "items" : {
                      "type" : "number"
                    }
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorised - incorrect or missing user/pass"
          }
        }
      }
    },
    "/deployments/{userkey}/battery/historical/soc" : {
      "get" : {
        "security" : [ {
          "api_key" : [ ]
        } ],
        "summary" : "state of charge of a battery in kWh",
        "parameters" : [ {
          "$ref" : "#/parameters/userkey"
        }, {
          "$ref" : "#/parameters/delta_t"
        }, {
          "$ref" : "#/parameters/start"
        }, {
          "$ref" : "#/parameters/end"
        }, {
          "$ref" : "#/parameters/format"
        } ],
        "responses" : {
          "200" : {
            "description" : "capacity and list of state of charge records - timestamp, charge",
            "schema" : {
              "properties" : {
                "batteryCapacity" : {
                  "type" : "number"
                },
                "batterySOC" : {
                  "type" : "array",
                  "items" : {
                    "type" : "array",
                    "items" : {
                      "type" : "number"
                    }
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorised - incorrect or missing user/pass"
          }
        }
      }
    },
    "/deployments/{userkey}/meter/historical/p" : {
      "get" : {
        "security" : [ {
          "api_key" : [ ]
        } ],
        "summary" : "real power measurements in kW at the grid connection",
        "parameters" : [ {
          "$ref" : "#/parameters/userkey"
        }, {
          "$ref" : "#/parameters/delta_t"
        }, {
          "$ref" : "#/parameters/start"
        }, {
          "$ref" : "#/parameters/end"
        }, {
          "$ref" : "#/parameters/format"
        } ],
        "responses" : {
          "200" : {
            "description" : "list of meter usage readings - timestamp, usage",
            "schema" : {
              "properties" : {
                "meterP" : {
                  "type" : "array",
                  "items" : {
                    "type" : "array",
                    "items" : {
                      "type" : "number"
                    }
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorised - incorrect or missing user/pass"
          }
        }
      }
    },
    "/deployments/{userkey}/cost/historical" : {
      "get" : {
        "security" : [ {
          "api_key" : [ ]
        } ],
        "summary" : "energy cost in $",
        "parameters" : [ {
          "$ref" : "#/parameters/userkey"
        }, {
          "$ref" : "#/parameters/delta_t"
        }, {
          "$ref" : "#/parameters/start"
        }, {
          "$ref" : "#/parameters/end"
        }, {
          "$ref" : "#/parameters/format"
        } ],
        "responses" : {
          "200" : {
            "description" : "list of retail costings for usage - timestamp, usage",
            "schema" : {
              "properties" : {
                "retailCost" : {
                  "type" : "array",
                  "items" : {
                    "type" : "array",
                    "items" : {
                      "type" : "number"
                    }
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorised - incorrect or missing user/pass"
          }
        }
      }
    },
    "/deployments/{userkey}/gridcredits/historical" : {
      "get" : {
        "security" : [ {
          "api_key" : [ ]
        } ],
        "summary" : "earned gridcredits",
        "parameters" : [ {
          "$ref" : "#/parameters/userkey"
        }, {
          "$ref" : "#/parameters/delta_t"
        }, {
          "$ref" : "#/parameters/start"
        }, {
          "$ref" : "#/parameters/end"
        }, {
          "$ref" : "#/parameters/format"
        } ],
        "responses" : {
          "200" : {
            "description" : "list of grid credits earnt - timestamp, usage",
            "schema" : {
              "properties" : {
                "gridcredits" : {
                  "type" : "array",
                  "items" : {
                    "type" : "array",
                    "items" : {
                      "type" : "number"
                    }
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorised - incorrect or missing user/pass"
          }
        }
      }
    }
  }
}